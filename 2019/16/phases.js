/*
iS = Input Signal, tx = test input (+ number), pI = puzzle Input
*/
var t1 = 12345678;
var t2 = 80871224585914546619083218645595;
var t3 = 19617804207202209144916044189917;
var t4 = 69317163492948606335995924319873;
var pI = 59796332430280528211060657577039744056609636505111313336094865900635343682296702094018432765613019371234483818415934914575717134617783515237300919201989706451524069044921384738930172026234872525254689609787752401342687098918804210494391161531008341329016626922990938854681575317559821067933058630688365067790812341475168200215494963690593873250884807840611487288560291748414160551508979374335267106414602526249401281066501677212002980616711058803845336067123298983258010079178111678678796586176705130938139337603538683803154824502761228184209473344607055926120829751532887810487164482307564712692208157118923502010028250886290873995577102178526942152;
var iS = t1;
var iPN = 0;
var ph = 1;
var pattern = [0, 1, 0, -1];

function iteratorPattern(n2, n1) {
  n2++;
  n1++;
  var number = Math.floor(n2 / n1) % 4;
  return pattern[number];
}

function main() {
  for (var i = 1; i <= 4; i++) {
    var digits = "";
    for (var n1 = 0; n1 < iS.toString().length; n1++) {
      var number = 0;
      for (var n2 = 0; n2 < iS.toString().length; n2++) {
        number = parseInt(number) + iS.toString()[n2] * iteratorPattern(n2, n1);
      }
      var nL = number.toString().length;
      digits = digits + number.toString()[nL - 1];
    }
    iS = digits;
  }
  console.log(iS);
}
main();
